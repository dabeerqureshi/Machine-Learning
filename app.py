# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NRti9gVvL90ObSr1h0FIop2IbQYIW9Ep
"""

import pygame, sys
from pygame.locals import *
import numpy as np
from keras.models import load_model
import cv2

WINDOWSIZEX = 640
WINDOWSIZEY = 480

BOUNDRYINC = 5
WHITE = (255,255,255)
BLACK = (0,0,0)
RED = (255,0,0)

IMAGESAVE = False
PREDICT = True

MODEL = load_model("")

LABEL = {0:'Zero', 1:'One', 2:'Two', 3:'Three', 4:'Four', 5:'Five', 6:'Six', 7:'Seven', 8:'Eight', 9:'Nine'}


#initialize our pygame
pygame.init()

FONT = pygame.font.Font("freesansbold.tff", 18)
pygame.display.set_mode((WINDOWSIZEX, WINDOWSIZEY))
#WHILE_INT = DISPLAYSURF.mp_rgb(WHITE)
pygame.display.set_caption("Digital Board")

iswriting = False
number_xcord = []
number_ycord = []


while True:

  for event in pygame.event.get():
    if event.type == QUIT:
      pygame.quit()
      sys.exit()

    if event.type = MOUSEMOTION and iswriting:
      xcord, ycord = event.pos
      pygame.draw.circle(DISPLAYSURD, WHITE, (xcord, ycord), 4, 0)

      number_xcord.append(xcord)
      number_ycord.append(ycord)

    if event.type == MOUSEBUTTONDOWN:
      iswriting = True

    if event.type == MOUSEBUTTONUP
      iswriting = False
      number_xcord = sorted(number_xcord)
      number_ycord = sorted(number_ycord)

      rect_min_x, rect_max,x = max(number_xcord[0]-BOUNDRYINC, 0), min(WINDOWSIZEX, number_xcord[-1]+BOUNDRYINC)
      rect_min_y, rect_max,y = max(number_ycord[0]-BOUNDRYINC, 0), min(number_ycord[-1]+BOUNDRYINC, WINDOWSIZEX)

      number_xcord = []
      number_ycord = []

      ing_arr = np.array(pygame.PixelArray(DISPLAYSURF))[rect_min_x:rect_max_x, rect_min_y, rect_max_y].T.astype(np.float32)

      if IMAGESAVE:
        cv2.imwrite("image.png")
        image_cnt +=1

      if PREDICT:
          image = cv2.resize(img_arr, (28,28))
          image = np.pad(image(10,10), 'constant', constant_values = 0)
          image = cv2.resize(imag, (28,28))/255

          label = str(LABEL[np.argmax(MODEL.predict(image.reshape(1,28,28,1)))])

          textSurface = Font.render(label, True, RED, WHITE)
          textRecObj = testing.get_rect()
          textRectObj.left, textRectObj.bottom = rect_min_x, rect_max_y

          DISPLAYSURF.blit(textSurface, textRectObj)

      if event.type == KEYDOWN:
        if event.unicode == "n":
          DISPLAYSURF.fill(BLACK)


    pygame.display.update()